openapi: 3.0.3
info:
  title: Example Service API
  version: 1.0.0
  description: A simple example OpenAPI specification bundled with the starter.
servers:
  - url: https://api.example.com
    description: Production server
  - url: https://staging-api.example.com
    description: Staging server
tags:
  - name: health
    description: Health check operations
  - name: users
    description: Manage application users
paths:
  /health:
    get:
      summary: Check API health
      description: Returns the current health status for the API.
      tags:
        - health
      responses:
        "200":
          description: API is operating normally.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /users:
    get:
      summary: List users
      description: Retrieve a paginated list of users.
      tags:
        - users
      parameters:
        - name: page
          in: query
          description: The page to retrieve.
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          description: Number of users per page.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: A list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total:
                    type: integer
                required:
                  - items
                  - total
    post:
      summary: Create a user
      description: Create a new user in the system.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        "201":
          description: The user was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: The provided data was invalid.
components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - status
        - timestamp
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - createdAt
    CreateUserInput:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password
